generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Game {
  id                Int                 @id @default(autoincrement())
  name              String
  description       String
  image             String              @default("placeholder")
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  createdBy         User                @relation(fields: [createdById], references: [id], onDelete: Cascade)
  createdById       Int
  participants      User[]              @relation("GameParticipants")
  activePlayers     User[]              @relation("GameActivePlayers")
  GameParticipants  GameParticipants[]
  GameActivePlayers GameActivePlayers[]
}

model User {
  id                Int                 @id @default(autoincrement())
  tokenVersion      Int                 @default(0)
  email             String              @unique
  password          String
  firstName         String
  lastName          String
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  games             Game[]              @relation("GameParticipants")
  activeGames       Game[]              @relation("GameActivePlayers")
  Game              Game[]
  GameParticipants  GameParticipants[]
  GameActivePlayers GameActivePlayers[]
}

model GameParticipants {
  game   Game @relation(fields: [gameId], references: [id])
  gameId Int
  user   User @relation(fields: [userId], references: [id])
  userId Int

  @@id([gameId, userId])
}

model GameActivePlayers {
  game   Game @relation(fields: [gameId], references: [id])
  gameId Int
  user   User @relation(fields: [userId], references: [id])
  userId Int

  @@id([gameId, userId])
}
