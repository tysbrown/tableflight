name: Deploy to EKS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-2
      CLUSTER_NAME: tableflight-stage
      ECR_REPOSITORY_UI: ui
      ECR_REPOSITORY_API: api

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          region: ${{ env.AWS_REGION }}

      - name: Build and push Docker images
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
        run: |
          docker build -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY_UI }}:latest -f apps/ui/Dockerfile .
          docker build -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY_API }}:latest -f apps/api/Dockerfile .

          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY_UI }}:latest
          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY_API }}:latest

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.22.0

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.CLUSTER_NAME }}

      - name: Add Helm repo and update
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update

      - name: Install Nginx Ingress Controller
        run: |
          helm upgrade --install nginx-ingress ingress-nginx/ingress-nginx --namespace ingress-nginx --create-namespace

      - name: Install Cert-Manager CRDs
        run: |
          kubectl apply -f https://github.com/jetstack/cert-manager/releases/latest/download/cert-manager.crds.yaml

      - name: Install Cert-Manager
        run: |
          kubectl apply -f https://github.com/jetstack/cert-manager/releases/latest/download/cert-manager.yaml

      - name: Wait for Cert-Manager to be ready
        run: |
          kubectl rollout status deployment/cert-manager -n cert-manager
          kubectl rollout status deployment/cert-manager-webhook -n cert-manager
          kubectl rollout status deployment/cert-manager-cainjector -n cert-manager

      - name: Create ClusterIssuer
        run: |
          kubectl apply -f cluster-issuer.yml

      - name: Deploy UI
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
        run: |
          helm upgrade --install --timeout 180s ui .deployment/ui --set image.repository=$ECR_REGISTRY/${{ env.ECR_REPOSITORY_UI }},image.tag=latest

      - name: Deploy API
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
        run: |
          helm upgrade --install --timeout 180s api .deployment/api --set image.repository=$ECR_REGISTRY/${{ env.ECR_REPOSITORY_API }},image.tag=latest
